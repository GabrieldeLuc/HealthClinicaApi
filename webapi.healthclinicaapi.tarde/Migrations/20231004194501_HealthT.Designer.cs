// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.healthclinica.tarde.Context;

#nullable disable

namespace webapi.healthclinicaapi.tarde.Migrations
{
    [DbContext(typeof(HealthContext))]
    [Migration("20231004194501_HealthT")]
    partial class HealthT
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi.healthclinica.tarde.Domains.ClinicaDomain", b =>
                {
                    b.Property<Guid>("IdClinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("Varchar(14)");

                    b.Property<string>("EnderecoClinica")
                        .IsRequired()
                        .HasColumnType("Varchar(70)");

                    b.Property<string>("HorarioAbertura")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("HorarioFechamento")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("NomeClinica")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.HasKey("IdClinica");

                    b.ToTable("ClinicaDomain");
                });

            modelBuilder.Entity("webapi.healthclinica.tarde.Domains.Consulta", b =>
                {
                    b.Property<Guid>("IdConsulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataConsulta")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("Varchar(300)");

                    b.Property<string>("HoraConsulta")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<Guid>("IdMedico")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdConsulta");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("webapi.healthclinica.tarde.Domains.Especialidade", b =>
                {
                    b.Property<Guid>("IdEspecialidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoEspecialidade")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.HasKey("IdEspecialidade");

                    b.ToTable("Especialidade");
                });

            modelBuilder.Entity("webapi.healthclinica.tarde.Domains.Medico", b =>
                {
                    b.Property<Guid>("IdMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("Varchar(13)");

                    b.Property<Guid>("IdClinica")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEspecialidade")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdMedico");

                    b.HasIndex("IdClinica");

                    b.HasIndex("IdEspecialidade");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("webapi.healthclinica.tarde.Domains.Paciente", b =>
                {
                    b.Property<Guid>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("Varchar(8)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("Varchar(11)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("Varchar(70)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("Varchar(8)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("Varchar(15)");

                    b.HasKey("IdPaciente");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("webapi.healthclinica.tarde.Domains.TipoDeUsuario", b =>
                {
                    b.Property<Guid>("IdTipodeUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloTipoUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdTipodeUsuario");

                    b.ToTable("TipoDeUsuario");
                });

            modelBuilder.Entity("webapi.healthclinica.tarde.Domains.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<Guid>("IdTipodeUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("char(50)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdTipodeUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("webapi.healthclinica.tarde.Domains.Consulta", b =>
                {
                    b.HasOne("webapi.healthclinica.tarde.Domains.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.healthclinica.tarde.Domains.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("webapi.healthclinica.tarde.Domains.Medico", b =>
                {
                    b.HasOne("webapi.healthclinica.tarde.Domains.ClinicaDomain", "Clinica")
                        .WithMany()
                        .HasForeignKey("IdClinica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.healthclinica.tarde.Domains.Especialidade", "Especialidade")
                        .WithMany()
                        .HasForeignKey("IdEspecialidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.healthclinica.tarde.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinica");

                    b.Navigation("Especialidade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("webapi.healthclinica.tarde.Domains.Usuario", b =>
                {
                    b.HasOne("webapi.healthclinica.tarde.Domains.TipoDeUsuario", "TipodeUsuario")
                        .WithMany()
                        .HasForeignKey("IdTipodeUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipodeUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
